#########################################################
####datasource
#########################################################
##spring.datasource.url = jdbc:mysql://localhost:3306/test?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT
##spring.datasource.username = root
##spring.datasource.password = root
##spring.datasource.driverClassName = com.mysql.jdbc.Driver
##spring.datasource.max-active = 20
##spring.datesource.max-idle=8
##spring.datasource.min-idle = 8
##spring.datasource.initial-size = 10
#
#########################################################
####springboot配置 contextPath
####springboot默认是“/” 直接通过http://ip:port/就可以方位到index页面
####如果想要修改成  http://ip:port/path/ 访问
####需要在application.properties文件加入server.context-path =/你的path
####比如：spring-boot 那么方位的地址就是http://ip:port/spring-boot路径
#########################################################
server.context-path=/zxgthy
############################################
####springboot默认端口号8080，如果想要进行更改，或者想要两个springboot同时启动的话
####只需要修改application.properties文件，在里面加入server.port = 9090
############################################
#server.port=9090
#
#
#########################################################
#### Java Persistence Api
#########################################################
## Specify the DBMS
#spring.jpa.database = MYSQL
## Show or not log for each sql query
#spring.jpa.show-sql = true
## Hibernate ddl auto (create, create-drop, update)
#spring.jpa.hibernate.ddl-auto = update
## Naming strategy
#spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy
## stripped before adding them to the entity manager)
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
##常用配置：
#########################################################
####EMBEDDED SERVER CONFIGURATION (ServerProperties)
#########################################################
##server.port=8080
##server.address= # bind to a specific NIC
##server.session-timeout= # session timeout in seconds
##the context path, defaults to '/'
##server.context-path=/spring-boot
##server.servlet-path= # the servlet path, defaults to '/'
##server.tomcat.access-log-pattern= # log pattern of the access log
##server.tomcat.access-log-enabled=false # is access logging enabled
##server.tomcat.protocol-header=x-forwarded-proto # ssl forward headers
##server.tomcat.remote-ip-header=x-forwarded-for
##server.tomcat.basedir=/tmp # base dir (usually not needed, defaults to tmp)
##server.tomcat.background-processor-delay=30; # in seconds
##server.tomcat.max-threads = 0 # number of threads in protocol handler
##server.tomcat.uri-encoding = UTF-8 # character encoding to use for URL decoding
#
#########################################################
####THYMELEAF (ThymeleafAutoConfiguration)
#########################################################
##spring.thymeleaf.prefix=classpath:/templates/pages/
##spring.thymeleaf.suffix=.html
##spring.thymeleaf.mode=HTML5
##spring.thymeleaf.encoding=UTF-8
## ;charset=<encoding> is added
##spring.thymeleaf.content-type=text/html
## set to false for hot refresh
#spring.thymeleaf.cache=false
#author.name = zxg
#author.age = 27
#
#logging.file=./springboot.log
#logging.level.org.springframework.web = INFO
#
##生成密码的Key
#crypt.key = EnCQSg0W8vu11G2PfH8TO2AHA
#spring.view.prefix=/WEB-INF/jsp/
#spring.view.suffix=.jsp
spring.thymeleaf.cache=false
#开启MVC Thymeleaf视图解析（默认值：true）
spring.thymeleaf.enabled=true
#模板编码
spring.thymeleaf.encoding=UTF-8
#要被排除在解析之外的视图名称列表，用逗号分隔
spring.thymeleaf.excluded-view-names=
#要运用于模板之上的模板模式。另见StandardTemplate-ModeHandlers(默认值：HTML5)
spring.thymeleaf.mode=HTML5
#在构建URL时添加到视图名称前的前缀（默认值：classpath:/templates/）
spring.thymeleaf.prefix=classpath:/templates/
#在构建URL时添加到视图名称后的后缀（默认值：.html）
spring.thymeleaf.suffix=.html
#Thymeleaf模板解析器在解析器链中的顺序。默认情况下，它排第一位。顺序从1开始，只有在定义了额外的TemplateResolver Bean时才需要设置这个属性。
#spring.thymeleaf.template-resolver-order=
#可解析的视图名称列表，用逗号分隔
#spring.thymeleaf.view-names=
# THYMELEAF (ThymeleafAutoConfiguration)
#开启模板缓存（默认值：true）
#Check that the template exists before rendering it.
spring.thymeleaf.check-template=true 
#检查模板位置是否正确（默认值:true）
spring.thymeleaf.check-template-location=true
#Content-Type的值（默认值：text/html）
spring.thymeleaf.content-type=text/html